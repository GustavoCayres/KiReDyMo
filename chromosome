from TranscriptionRegion import TranscriptionRegion


class Chromosome:
    """ Class containing data on the chromosome """
    """ Also controls the basic functions of the replication process. """

    def __init__(self, code, replication_origins, transcription_regions, length):
        self.code = code                                        # chromosome's identification
        self.replication_origins = replication_origins          # position of the replication origins
        self.transcription_regions = transcription_regions      # regions of RNA transcription on the DNA
        self.length = length                                    # length of the chromosome

    def select_origin(self):
        """ Randomly selects the replication origin for the process """
        """ FOR NOW, SELECTS THE ONLY REPLICATION ORIGIN """
        return self.replication_origins[0]

    def add_transcription_region(self, coordinates, speed, delay):
        """ Marks a new transcription region in this chromosome """
        new_region = TranscriptionRegion(self.code, coordinates, speed, delay)
        self.transcription_regions.append(new_region)

    def begin_replication(self):
        pass
        # creates a variable marking the selected replication origin

    def continue_replication(self):
        pass
        # updates the previous variable taking into account the SPEED OF REPLICATION, length of the chromosome
        # and COLLISIONS!
